{% set name = "sqlmodel" %}
{% set version = "0.0.6" %}


package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/sqlmodel-{{ version }}.tar.gz
  sha256: 3b4f966b9671b24d85529d274e6c4dbc7753b468e35d2d6a40bd75cad1f66813

build:
  number: 0
  noarch: python
  script: {{ PYTHON }} -m pip install . -vv

requirements:
  host:
    - pip
    - poetry-core
    - python >=3.6
  run:
    - pydantic >=1.8.2
    - python >=3.6
    - sqlalchemy >=1.4.17
    - sqlalchemy2-stubs

test:
  imports:
    - sqlmodel
    - sqlmodel.engine
  commands:
    - pip check
    # Extract the version of the built package
    - VERSION=$(python -c 'from importlib import metadata; print(metadata.version("sqlmodel"))')
    - echo "sqlmodel version $VERSION"
    # Ensure that version is not 0. (This conditional looks redundant, but YAML thinks
    # that [...] denotes a list.)
    - if [ "0" == "$VERSION" ]; then false; fi
  requires:
    - pip

about:
  home: https://github.com/tiangolo/sqlmodel
  summary: SQL databases in Python, designed for simplicity, compatibility, and robustness.
  doc_url: https://sqlmodel.tiangolo.com/
  license: MIT
  license_file: LICENSE
  description: |
    SQLModel is designed to simplify interacting with SQL databases in FastAPI
     applications, it was created by the same author. It combines SQLAlchemy
     and Pydantic and tries to simplify the code you write as much as possible,
     allowing you to reduce the code duplication to a minimum, but while getting
     the best developer experience possible. SQLModel is, in fact, a thin layer
     on top of Pydantic and SQLAlchemy, carefully designed to be compatible with
     both.

extra:
  recipe-maintainers:
    - thewchan
